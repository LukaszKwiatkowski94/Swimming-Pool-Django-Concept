*,:after,:before{box-sizing:border-box;margin:0;padding:0}html{font-size:62.5%;scroll-behavior:smooth}.wrapper{max-width:1200px}.nav{position:relative;background-color:#231955;height:60px}.nav__hide{overflow:hidden}.nav__list{position:absolute;top:0;bottom:0;left:0;right:0;display:flex;flex-direction:column;justify-content:space-evenly;align-items:center;height:100vh;transform:translateX(110%);background-color:#1f4690;transition:transform .5s;z-index:1}.nav__show-animation{animation:a .5s linear forwards}.nav__item{font-size:3.2rem;text-decoration:none;text-transform:uppercase;color:#ffe5b4}.nav__btn{position:absolute;top:10px;right:10px;width:40px;height:40px;background:none;border:none;cursor:pointer;z-index:2}.nav__btn-content{width:100%;height:100%;background-image:url(../../static/icon/menu.svg);background-size:cover}.nav__btn--exit{background-image:url(../../static/icon/x.svg)}.header{display:flex;flex-direction:column;justify-content:center;align-items:center;height:80vh;background-image:linear-gradient(90deg,rgba(31,70,144,.6),rgba(31,70,144,.6)),url(../img/swimmers-small.jpg);background-position:50%;background-size:cover;color:#ffe5b4}.header__title{font-size:3.6rem;text-transform:uppercase;letter-spacing:2px;text-shadow:0 0 5px #231955}.header__text{margin-top:.5em;text-align:center;font-size:1.8rem;letter-spacing:1px}@keyframes a{0%{transform:translateX(110%)}to{transform:translateX(0)}}@media (min-width:576px){.header__title{font-size:4.8rem;text-shadow:0 0 7px #231955}.header__text{font-size:2.2rem;letter-spacing:3px}}@media (min-width:768px){.nav .wrapper,.nav__list{height:100%}.nav__list{position:relative;display:flex;flex-direction:row;justify-content:flex-end;margin-bottom:0;transform:translate(0);background-color:transparent}.nav__item{padding:.5em;font-size:2.6rem}.nav__btn{display:none}.header__title{font-size:6.4rem;letter-spacing:4px}.header__text{font-size:2.6rem}}@media (min-width:992px){.header{background-image:linear-gradient(90deg,rgba(31,70,144,.6),rgba(31,70,144,.6)),url(../img/swimmers-big.jpg)}.header__title{font-size:7.2rem;letter-spacing:6px;text-shadow:0 0 9px #231955}.header__text{font-size:3.2rem;letter-spacing:5px}}@media (min-width:1200px){.header__title{letter-spacing:12px}.header__text{font-size:3.6rem}}
/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
