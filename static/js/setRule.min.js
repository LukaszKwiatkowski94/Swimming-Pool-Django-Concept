"use strict";var inputEmail=document.querySelector(".input-user-email"),setUserRule=function(e){console.log(e)},getUserOption=function(e,a){var t,i=e,n={1:"Client",2:"Administrator",3:"Cashier",4:"Customer service",5:"Accountant",6:"Press spokesman",7:"Management"},r=document.createElement("div");for(t in r.classList.add("users__option"),n)r.append(function(e,t){var n=document.createElement("label"),r=(n.classList.add("input-box__label"),n.setAttribute("for",t.replace(" ","_")+"_"+i),document.createElement("input"));return r.setAttribute("type","radio"),r.setAttribute("name",i),r.setAttribute("id",t.replace(" ","_")+"_"+i),r.addEventListener("click",function(){return setUserRule(r)}),r.setAttribute("value",e),e===a&&(r.checked=!0),n.append(r,t),n}(t,n[t]));return r},setClick=function(e,t){var n=e.parentElement,r=e.getAttribute("data-name");n.innerHTML="",n.append(e,getUserOption(r,t))},createUsersHeader=function(e){var t,a=document.querySelector(".set-rule__users");a.innerHTML="",0===e.length?((t=document.createElement("p")).textContent="No user found with the given e-mail address.",a.append(t)):e.forEach(function(t){var e=document.createElement("div"),n=(e.classList.add("users__item"),document.createElement("div")),r=(n.classList.add("users__name"),n.setAttribute("data-name",t.fields.email),document.createElement("p"));r.textContent="".concat(t.fields.email," - ").concat(t.fields.nameUser," ").concat(t.fields.surnameUser),n.append(r),n.addEventListener("click",function(e){return setClick(e.target,t.fields.role)}),e.append(n),a.append(e)})},getUsersByEmail=function(e){e={method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({email:e})};fetch("/user/getUsersList/",e).then(function(e){return e.json()}).then(function(e){createUsersHeader(e)})};function inputHandler(e){("Enter"==e.key||4<inputEmail.value.length)&&getUsersByEmail(inputEmail.value)}inputEmail.addEventListener("keyup",function(e){return inputHandler(e)});
//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNldFJ1bGUuanMiXSwibmFtZXMiOlsiaW5wdXRFbWFpbCIsImRvY3VtZW50IiwicXVlcnlTZWxlY3RvciIsImNvbnNvbGUiLCJsb2ciLCJvcHRpb24iLCJnZXRVc2VyT3B0aW9uIiwibmFtZVJhZGlvIiwicm9sZVZhbHVlIiwia2V5IiwibmFtZSIsIjEiLCIyIiwiMyIsIjQiLCI1IiwiNiIsIjciLCJvcHRpb25zTGlzdCIsImNyZWF0ZUVsZW1lbnQiLCJjaGVja2VkIiwiYWRkIiwicnVsZUxpc3QiLCJhcHBlbmQiLCJ2YWx1ZSIsImNvbnRlbnQiLCJsYWJlbCIsImlucHV0IiwiY2xhc3NMaXN0IiwicnVsZSIsInNldEF0dHJpYnV0ZSIsInNldFVzZXJSdWxlIiwiYWRkRXZlbnRMaXN0ZW5lciIsImJveCIsIml0ZW0iLCJwYXJlbnRFbGVtZW50IiwiaW5uZXJIVE1MIiwiY3JlYXRlVXNlcnNIZWFkZXIiLCJkYXRhIiwiaXRlbXNPZlVzZXJzIiwic2V0Q2xpY2siLCJ0ZXh0Q29udGVudCIsInAiLCJmb3JFYWNoIiwidXNlciIsIml0ZW1VIiwibmFtZVUiLCJmaWVsZHMiLCJlbWFpbCIsImxlbmd0aCIsImNvbmNhdCIsIm5hbWVVc2VyIiwic3VybmFtZVVzZXIiLCJ0YXJnZXQiLCJyb2xlIiwidXNlckVtYWlsIiwib3B0aW9ucyIsIm1ldGhvZCIsImhlYWRlcnMiLCJDb250ZW50LVR5cGUiLCJib2R5IiwiSlNPTiIsInN0cmluZ2lmeSIsImZldGNoIiwidGhlbiIsInJlc3BvbnNlIiwianNvbiIsImdldFVzZXJzQnlFbWFpbCIsImUiLCJpbnB1dEhhbmRsZXIiXSwibWFwcGluZ3MiOiJhQUFBLElBQU1BLFdBQWFDLFNBQVNDLGNBQWMscUJBQXBDRixZQUFhQyxTQUFBQSxHQUdsQkUsUUFBUUMsSUFBSUMsSUFEYkMsY0FBQSxTQUFBQyxFQUFBQyxHQUtDLElBc0JFQyxFQXRCRUMsRUFBT0gsRUFETkQsRUFBYSxDQUNsQkssRUFBQSxTQUNBQyxFQUFBLGdCQUdDQyxFQUZBLFVBR0FDLEVBRkEsbUJBR0FDLEVBRkEsYUFHQUMsRUFGQSxrQkFHQUMsRUFGQSxjQWNBQyxFQUFXVixTQUFVVyxjQUFBLE9BUXRCLElBTkVWLEtBS0ZTLEVBTlFFLFVBQVVDLElBQWhCLGlCQUNBQyxFQVFESixFQVBNSyxPQWZILFNBQUFDLEVBQUFDLEdBUGEsSUFBakJDLEVBQUF6QixTQUFBa0IsY0FBQSxTQVVDUSxHQUNBRCxFQUFNRSxVQUFVUCxJQUFJLG9CQUZyQkssRUFBTUcsYUFBTyxNQUFDTCxFQUFPQyxRQUFZLElBQUEsS0FBQSxJQUFBZixHQUN2QlQsU0FBR0EsY0FBU2tCLFVBYXJCLE9BVEFRLEVBSEFELGFBQWdCTCxPQUFJLFNBSXBCTSxFQUhBRCxhQUFNSSxPQUFOcEIsR0FJQWlCLEVBSElBLGFBQVExQixLQUFTa0IsRUFBQUEsUUFBYyxJQUFuQyxLQUFBLElBQUFULEdBSUFpQixFQUhBQSxpQkFBbUIsUUFBUSxXQUFBLE9BQTNCSSxZQUFBSixLQUlBQSxFQUhBQSxhQUFNRyxRQUFOTixHQUNBRyxJQUFNRyxJQUlMSCxFQUhJUCxTQUFDWSxHQUtOTixFQUxBSCxPQUFBSSxFQUFBRixHQUNLQyxFQUlRQyxDQUFPRixFQU1SSCxFQUFTYixLQUd0QixPQXRCQVMsR0FpQkFBLFNBQVlVLFNBQUFBLEVBQVpwQixHQVNBLElBQUl5QixFQUFNQyxFQUFLQyxjQVJmNUIsRUFBQTJCLEVBQWdCWixhQUFVLGFBVTFCVyxFQVRDRyxVQUFZZCxHQVViVyxFQVRDZixPQUFBQSxFQUFZSyxjQUFXaEIsRUFBdkJDLEtBRUQ2QixrQkFBQSxTQUFBQyxHQWpDRCxJQXFDS0wsRUFyQ0xNLEVBQUF0QyxTQUFBQyxjQUFBLG9CQTZDQ3FDLEVBQWFILFVBQVksR0FUVCxJQUFYSSxFQUFBQSxTQUNEUCxFQUFHaEMsU0FBUWtDLGNBQWYsTUFDQU0sWUFBZ0JQLCtDQUNoQkQsRUFBQVYsT0FBQW1CLElBSERKLEVBQUFLLFFBQUEsU0FBQUMsR0FnQkcsSUFBSUMsRUFBUTVDLFNBQVNrQixjQUFjLE9BUmpDb0IsR0FETE0sRUFBTVIsVUFBQUEsSUFBaUIsZUFDbEJFLFNBQWV0QyxjQUFTQyxRQUV4Qm9DLEdBREpDLEVBQUFBLFVBQWFILElBQUFBLGVBV1hVLEVBQU1oQixhQUFhLFlBQWFjLEVBQUtHLE9BQU9DLE9BVnJDQyxTQUFMOUIsY0FBbUIsTUFZckJ1QixFQVhERCxZQVdDLEdBQUFTLE9BWGdCL0IsRUFBQUEsT0FBVDZCLE1BV1AsT0FBQUUsT0FYRE4sRUFBQUcsT0FBQUksU0FXQyxLQUFBRCxPQVhETixFQUFBRyxPQUFBSyxhQVlDTixFQVhDTCxPQUFBQSxHQVlESyxFQVhEUCxpQkFBQSxRQUFBLFNBQUFPLEdBQUEsT0FBQU4sU0FBQU0sRUFBQU8sT0FBQVQsRUFBQUcsT0FBQU8sUUFIRFQsRUFJT3RCLE9BQUF1QixHQVlMUCxFQVhEaEIsT0FBYXNCLE1BS1pDLGdCQUFBLFNBQW1CUyxHQWVqQkMsRUFYSXhCLENBWVB5QixPQVppQyxPQWFqQ0MsUUFiQyxDQWNBQyxlQWJhYixvQkFlZGMsS0F6QkFDLEtBQUFDLFVBTVM3RCxDQVlUK0MsTUFYR1AsS0FmTHNCLE1BQUEsc0JBQUFQLEdBb0NHUSxLQUFLLFNBQUNDLEdBQUQsT0FBY0EsRUFBU0MsU0FaL0JGLEtBQU1HLFNBQUFBLEdBQ0w5QixrQkFBZUMsTUFpQmhCLFNBYkVtQixhQURhVyxJQUVKLFNBQVRWLEVBQUFBLEtBQVMsRUFBQTFELFdBQUF3QixNQUFBeUIsU0FjVGtCLGdCQWJDbkUsV0FBZ0J3QixPQWlCbkJ4QixXQWJPZ0MsaUJBQUEsUUFBdUJ3QixTQUF4QlksR0FBd0JaLE9BQTdCYSxhQUNRSiIsImZpbGUiOiJzZXRSdWxlLm1pbi5qcyIsInNvdXJjZXNDb250ZW50IjpbImNvbnN0IGlucHV0RW1haWwgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwiLmlucHV0LXVzZXItZW1haWxcIik7XHJcblxyXG5jb25zdCBzZXRVc2VyUnVsZSA9IChvcHRpb24pID0+IHtcclxuXHRjb25zb2xlLmxvZyhvcHRpb24pXHJcbn07XHJcblxyXG5jb25zdCBnZXRVc2VyT3B0aW9uID0gKG5hbWVSYWRpbywgcm9sZVZhbHVlKSA9PiB7XHJcblx0bGV0IG5hbWUgPSBuYW1lUmFkaW87XHJcblx0Y29uc3QgcnVsZUxpc3QgPSB7XHJcblx0XHQxOiBcIkNsaWVudFwiLFxyXG5cdFx0MjogXCJBZG1pbmlzdHJhdG9yXCIsXHJcblx0XHQzOiBcIkNhc2hpZXJcIixcclxuXHRcdDQ6IFwiQ3VzdG9tZXIgc2VydmljZVwiLFxyXG5cdFx0NTogXCJBY2NvdW50YW50XCIsXHJcblx0XHQ2OiBcIlByZXNzIHNwb2tlc21hblwiLFxyXG5cdFx0NzogXCJNYW5hZ2VtZW50XCIsXHJcblx0fTtcclxuXHRjb25zdCBydWxlID0gKHZhbHVlLCBjb250ZW50KSA9PiB7XHJcblx0XHRsZXQgbGFiZWwgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwibGFiZWxcIik7XHJcblx0XHRsYWJlbC5jbGFzc0xpc3QuYWRkKFwiaW5wdXQtYm94X19sYWJlbFwiKTtcclxuXHRcdGxhYmVsLnNldEF0dHJpYnV0ZShcImZvclwiLCBjb250ZW50LnJlcGxhY2UoXCIgXCIsIFwiX1wiKSArIFwiX1wiICsgbmFtZSk7XHJcblx0XHRsZXQgaW5wdXQgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwiaW5wdXRcIik7XHJcblx0XHRpbnB1dC5zZXRBdHRyaWJ1dGUoXCJ0eXBlXCIsIFwicmFkaW9cIik7XHJcblx0XHRpbnB1dC5zZXRBdHRyaWJ1dGUoXCJuYW1lXCIsIG5hbWUpO1xyXG5cdFx0aW5wdXQuc2V0QXR0cmlidXRlKFwiaWRcIiwgY29udGVudC5yZXBsYWNlKFwiIFwiLCBcIl9cIikgKyBcIl9cIiArIG5hbWUpO1xyXG5cdFx0aW5wdXQuYWRkRXZlbnRMaXN0ZW5lcihcImNsaWNrXCIsICgpID0+IHNldFVzZXJSdWxlKGlucHV0KSk7XHJcblx0XHRpbnB1dC5zZXRBdHRyaWJ1dGUoXCJ2YWx1ZVwiLCB2YWx1ZSk7XHJcblx0XHRpZih2YWx1ZT09PXJvbGVWYWx1ZSl7XHJcblx0XHRcdGlucHV0LmNoZWNrZWQgPSB0cnVlO1xyXG5cdFx0fVxyXG5cdFx0bGFiZWwuYXBwZW5kKGlucHV0LCBjb250ZW50KTtcclxuXHRcdHJldHVybiBsYWJlbDtcclxuXHR9O1xyXG5cdGNvbnN0IG9wdGlvbnNMaXN0ID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcImRpdlwiKTtcclxuXHRvcHRpb25zTGlzdC5jbGFzc0xpc3QuYWRkKFwidXNlcnNfX29wdGlvblwiKTtcclxuXHRmb3IgKGxldCBrZXkgaW4gcnVsZUxpc3QpIHtcclxuXHRcdGxldCB2YWx1ZSA9IHJ1bGVMaXN0W2tleV07XHJcblx0XHRvcHRpb25zTGlzdC5hcHBlbmQocnVsZShrZXksIHZhbHVlKSk7XHJcblx0fVxyXG5cdHJldHVybiBvcHRpb25zTGlzdDtcclxufTtcclxuXHJcbmNvbnN0IHNldENsaWNrID0gKGl0ZW0scm9sZVZhbHVlKSA9PiB7XHJcblx0bGV0IGJveCA9IGl0ZW0ucGFyZW50RWxlbWVudDtcclxuXHRsZXQgbmFtZVJhZGlvID0gaXRlbS5nZXRBdHRyaWJ1dGUoXCJkYXRhLW5hbWVcIik7XHJcblx0Ym94LmlubmVySFRNTCA9IFwiXCI7XHJcblx0Ym94LmFwcGVuZChpdGVtLCBnZXRVc2VyT3B0aW9uKG5hbWVSYWRpbyxyb2xlVmFsdWUpKTtcclxufTtcclxuXHJcbmNvbnN0IGNyZWF0ZVVzZXJzSGVhZGVyID0gKGRhdGEpID0+IHtcclxuXHRsZXQgaXRlbXNPZlVzZXJzID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcIi5zZXQtcnVsZV9fdXNlcnNcIik7XHJcblx0aXRlbXNPZlVzZXJzLmlubmVySFRNTCA9IFwiXCI7XHJcblx0aWYgKGRhdGEubGVuZ3RoID09PSAwKSB7XHJcblx0XHRsZXQgcCA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJwXCIpO1xyXG5cdFx0cC50ZXh0Q29udGVudCA9IFwiTm8gdXNlciBmb3VuZCB3aXRoIHRoZSBnaXZlbiBlLW1haWwgYWRkcmVzcy5cIjtcclxuXHRcdGl0ZW1zT2ZVc2Vycy5hcHBlbmQocCk7XHJcblx0fSBlbHNlIHtcclxuXHRcdGRhdGEuZm9yRWFjaCgodXNlcikgPT4ge1xyXG5cdFx0XHRsZXQgaXRlbVUgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwiZGl2XCIpO1xyXG5cdFx0XHRpdGVtVS5jbGFzc0xpc3QuYWRkKFwidXNlcnNfX2l0ZW1cIik7XHJcblx0XHRcdGxldCBuYW1lVSA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJkaXZcIik7XHJcblx0XHRcdG5hbWVVLmNsYXNzTGlzdC5hZGQoXCJ1c2Vyc19fbmFtZVwiKTtcclxuXHRcdFx0bmFtZVUuc2V0QXR0cmlidXRlKFwiZGF0YS1uYW1lXCIsIHVzZXIuZmllbGRzLmVtYWlsKTtcclxuXHRcdFx0bGV0IHAgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwicFwiKTtcclxuXHRcdFx0cC50ZXh0Q29udGVudCA9IGAke3VzZXIuZmllbGRzLmVtYWlsfSAtICR7dXNlci5maWVsZHMubmFtZVVzZXJ9ICR7dXNlci5maWVsZHMuc3VybmFtZVVzZXJ9YDtcclxuXHRcdFx0bmFtZVUuYXBwZW5kKHApO1xyXG5cdFx0XHRuYW1lVS5hZGRFdmVudExpc3RlbmVyKFwiY2xpY2tcIiwgKG5hbWVVKSA9PiBzZXRDbGljayhuYW1lVS50YXJnZXQsdXNlci5maWVsZHMucm9sZSkpO1xyXG5cdFx0XHRpdGVtVS5hcHBlbmQobmFtZVUpO1xyXG5cdFx0XHRpdGVtc09mVXNlcnMuYXBwZW5kKGl0ZW1VKTtcclxuXHRcdH0pO1xyXG5cdH1cclxufTtcclxuXHJcbmNvbnN0IGdldFVzZXJzQnlFbWFpbCA9ICh1c2VyRW1haWwpID0+IHtcclxuXHRjb25zdCBwYXJhbXMgPSB7XHJcblx0XHRlbWFpbDogdXNlckVtYWlsLFxyXG5cdH07XHJcblx0bGV0IG9wdGlvbnMgPSB7XHJcblx0XHRtZXRob2Q6IFwiUE9TVFwiLFxyXG5cdFx0aGVhZGVyczoge1xyXG5cdFx0XHRcIkNvbnRlbnQtVHlwZVwiOiBcImFwcGxpY2F0aW9uL2pzb25cIixcclxuXHRcdH0sXHJcblx0XHRib2R5OiBKU09OLnN0cmluZ2lmeShwYXJhbXMpLFxyXG5cdH07XHJcblx0ZmV0Y2goXCIvdXNlci9nZXRVc2Vyc0xpc3QvXCIsIG9wdGlvbnMpXHJcblx0XHQudGhlbigocmVzcG9uc2UpID0+IHJlc3BvbnNlLmpzb24oKSlcclxuXHRcdC50aGVuKChkYXRhKSA9PiB7XHJcblx0XHRcdGNyZWF0ZVVzZXJzSGVhZGVyKGRhdGEpO1xyXG5cdFx0fSk7XHJcbn07XHJcblxyXG5mdW5jdGlvbiBpbnB1dEhhbmRsZXIoZSkge1xyXG5cdGlmIChlLmtleSA9PSBcIkVudGVyXCIgfHwgaW5wdXRFbWFpbC52YWx1ZS5sZW5ndGggPiA0KSB7XHJcblx0XHRnZXRVc2Vyc0J5RW1haWwoaW5wdXRFbWFpbC52YWx1ZSk7XHJcblx0fVxyXG59XHJcblxyXG5pbnB1dEVtYWlsLmFkZEV2ZW50TGlzdGVuZXIoXCJrZXl1cFwiLCAoZSkgPT4gaW5wdXRIYW5kbGVyKGUpKTtcclxuIl19
